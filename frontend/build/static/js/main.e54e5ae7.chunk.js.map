{"version":3,"sources":["assets/logo.png","hooks/useWebsocket.js","hooks/useScore.js","pages/Admin.js","components/Banner.jsx","styling/Animations.js","components/PopOverContainer/styled.js","components/PopOverContainer/index.js","components/SliderContainer/styled.js","components/SliderContainer/index.js","pages/ScoreBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useWebsocket","useState","ws","setWS","useEffect","socket","WebSocket","addEventListener","console","log","useScore","props","scoreString","classDisplay","session","display","score","setScore","msg","JSON","parse","data","readOnly","newScoreString","stringify","send","Background","styled","div","Button","button","InputText","input","InputField","InputLabel","label","FormRow","form","Input","value","onChange","type","e","target","PeopleForm","people","setPeople","Person","index","person","pState","setPstate","id","EditPerson","name","prevState","time","onClick","Object","entries","filter","i","onSubmit","preventDefault","map","Admin","setSession","setClassDisplay","Banner","variant","css","slideDirection","direction","slideIn","keyframes","popOver","Container","PopOverElement","PopOverContainer","CSSTransition","in","className","classNames","timeout","children","Slider","enterDelay","SliderContainer","BannerGroup","PersonBanner","class","SessionBanner","current","setCurrent","changing","setChanging","setTimeout","onEntering","onExited","BottomBar","src","logo","alt","ScoreBoard","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e54e5ae7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c325f28.png\";","import { useEffect, useState } from \"react\";\nconst useWebsocket = () => {\n  const [ws, setWS] = useState(null);\n\n  useEffect(() => {\n    if (ws === null) {\n      const socket = new WebSocket(\"ws://172.22.70.68:3030/echo\");\n\n      socket.addEventListener(\"open\", () => {\n        console.log(\"open\");\n        setWS(socket);\n      });\n\n      socket.addEventListener(\"close\", () => {\n        setWS(null);\n      });\n    }\n  }, [ws]);\n\n  return ws;\n};\n\nexport default useWebsocket;\n","import { useState, useEffect, useCallback } from \"react\";\nimport useWebsocket from \"./useWebsocket\";\n\nconst useScore = (props) => {\n  const ws = useWebsocket();\n\n  const [scoreString, setScoreString] = useState();\n  const [score, setScore] = useState({\n    classDisplay: \"D Class\",\n    session: \"Practice\",\n    display: true,\n  });\n\n  useEffect(() => {\n    if (ws) {\n      ws.addEventListener(\"message\", (msg) => {\n        setScore(JSON.parse(msg.data));\n      });\n    }\n  }, [ws, setScore]);\n\n  useEffect(() => {\n    if (ws && props && props.readOnly === false) {\n      const newScoreString = JSON.stringify(score);\n      ws.send(newScoreString);\n    }\n  }, [ws, score, scoreString]);\n\n  return [score, setScore, ws];\n};\n\nexport default useScore;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useScore from \"../hooks/useScore\";\n\nconst Background = styled.div`\n  background-color: #3a393a;\n  width: auto;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: sans-serif;\n  padding: 4px;\n`;\n\nconst Button = styled.button`\n  background-color: #4c4c4c;\n  max-height: 20px;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  width: 100%;\n  margin: 3px auto;\n  flex-grow: 1;\n`;\n\nconst InputText = styled.input`\n  background-color: #1f1e1f;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 3px;\n  width: 100%;\n  height: max-content;\n`;\n\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  padding: 4px;\n`;\n\nconst InputLabel = styled.label`\n  color: white;\n  margin: 0 10px;\n`;\n\nconst FormRow = styled.form``;\n\nconst Input = ({ label, value, onChange }) => {\n  return (\n    <InputField>\n      <InputLabel>{label}</InputLabel>\n      <InputText\n        type=\"text\"\n        value={value}\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n      />\n    </InputField>\n  );\n};\n\nexport const PeopleForm = ({ people, setPeople, setScore }) => {\n  const AddPerson = () => {\n    setPeople([...people, {}]);\n  };\n\n  const EditPerson = (id, person) => {\n    console.log(person);\n    people[id] = person;\n    console.log(people);\n    setPeople(people);\n  };\n\n  const Person = ({ index, person }) => {\n    const [pState, setPstate] = useState(person);\n\n    useEffect(() => {\n      EditPerson(index, pState);\n    }, [pState, index]);\n\n    return (\n      <>\n        <Input\n          label=\"name\"\n          value={pState.name}\n          onChange={(name) => {\n            setPstate((prevState) => ({ ...prevState, name }));\n          }}\n        />\n        <Input\n          label=\"time\"\n          value={pState.time}\n          onChange={(time) => {\n            setPstate((prevState) => ({ ...prevState, time }));\n          }}\n        />\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setPeople(Object.entries(people).filter(([i]) => index !== i));\n          }}\n        >\n          Delete\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <FormRow\n      onSubmit={(e) => {\n        e.preventDefault();\n        setScore((prevState) => ({\n          ...prevState,\n          people: people,\n        }));\n      }}\n    >\n      {Object.entries(people).map(([index, person]) => (\n        <div>\n          <Person index={index} person={person} />\n        </div>\n      ))}\n      <Button type=\"button\" onClick={AddPerson}>\n        Add person\n      </Button>\n      <Button type=\"submit\">Update People</Button>\n    </FormRow>\n  );\n};\n\nexport const Admin = () => {\n  const [score, setScore] = useScore({ readOnly: false });\n  const [session, setSession] = useState(\"\");\n  const [people, setPeople] = useState([]);\n  const [classDisplay, setClassDisplay] = useState(\"\");\n\n  useEffect(() => {\n    if (score) {\n      if (score.session) {\n        setSession(score.session);\n      }\n      if (score.classDisplay) {\n        setClassDisplay(score.classDisplay);\n      }\n      if (score.people) {\n        setPeople(score.people);\n      }\n    }\n  }, [score]);\n\n  return (\n    <Background>\n      <FormRow\n        onSubmit={(e) => {\n          e.preventDefault();\n          setScore({\n            ...score,\n            session,\n          });\n        }}\n      >\n        <Input label=\"session\" value={session} onChange={setSession} />\n        <Button type=\"submit\">Update Session</Button>\n      </FormRow>\n      <FormRow\n        onSubmit={(e) => {\n          e.preventDefault();\n          setScore({\n            ...score,\n            classDisplay,\n          });\n        }}\n      >\n        <Input label=\"class\" value={classDisplay} onChange={setClassDisplay} />\n        <Button>Update Class</Button>\n      </FormRow>\n      <PeopleForm people={people} setPeople={setPeople} setScore={setScore} />\n      <Button\n        onClick={() => {\n          setScore((prevState) => ({\n            ...score,\n            display: !prevState.display,\n          }));\n        }}\n      >\n        Hide\n      </Button>\n    </Background>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nexport const Banner = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 30px 60px;\n  font-size: 20px;\n  color: white;\n  text-transform: uppercase;\n  z-index: 10;\n  ${(props) => {\n    switch (props.variant) {\n      case \"accent\":\n        return css`\n          color: black;\n          background-color: #fae141;\n        `;\n      case \"secondary\":\n        return css`\n          color: white;\n          background-color: #8b2fa5;\n        `;\n      default:\n        return \"\";\n    }\n  }}\n`;\n\nexport const AccentBanner = styled(Banner)`\n  background-color: #fae141;\n  color: black;\n`;\n","import { keyframes } from \"styled-components\";\n\nexport const slideDirection = (direction) => {\n  switch (direction) {\n    case \"right\":\n      return \"translateX(100%)\";\n    default:\n      return \"translateX(-100%)\";\n  }\n};\n\nexport const slideIn = (direction) => keyframes`\n  0% {\n    transform: ${slideDirection(direction)};\n  }\n  100% {\n    transform: translateX(0%);\n  }\n`;\n\nexport const popOver = keyframes`\n  0% {\n    transform: translateY(0);\n    clip-path: initial;;\n  }\n\n  50% {\n    transform: translateY(-100%);\n    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);\n  }\n\n  100% {\n    transform: translateY(0);\n    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\n  }\n`;\n","import styled from \"styled-components\";\nimport { popOver } from \"../../styling/Animations\";\n\nexport const Container = styled.div`\n  overflow: visible;\n  display: flex;\n`;\n\nexport const PopOverElement = styled.div`\n  display: inline-flex;\n  z-index: 9;\n\n  &.pop-over-enter {\n    clip-path: initial;\n  }\n\n  &.pop-over-enter-active {\n    animation: ${popOver} 500ms reverse;\n    animation-fill-mode: forwards;\n  }\n\n  &.pop-over-exit-active {\n    animation: ${popOver} 500ms normal;\n    animation-fill-mode: forwards;\n    animation-delay: 500ms;\n  }\n\n  &.pop-over-exit-done {\n    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\n  }\n`;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { PopOverElement, Container } from \"./styled\";\n\nexport const PopOverContainer = (props) => (\n  <Container>\n    <CSSTransition\n      in={props.display}\n      className=\"pop-over\"\n      classNames=\"pop-over\"\n      timeout={1000}\n    >\n      <PopOverElement>{props.children}</PopOverElement>\n    </CSSTransition>\n  </Container>\n);\n","import styled, { css } from \"styled-components\";\nimport { slideDirection, slideIn } from \"../../styling/Animations\";\n\nexport const Container = styled.div`\n  overflow: hidden;\n  display: flex;\n`;\n\nexport const Slider = styled.div`\n  transform: ${(props) =>\n    props.display ? slideDirection(props.direction) : `translateX(0)`};\n  z-index: 10;\n  display: flex;\n\n  &.slider-content-enter {\n    transform: ${(props) => slideDirection(props.direction)};\n  }\n\n  &.slider-content-enter-active {\n    animation: ${(props) => slideIn(props.direction)} 500ms normal;\n    animation-fill-mode: forwards;\n    animation-delay: ${(props) => props.enterDelay}ms;\n  }\n\n  &.slider-content-exit {\n    transform: ${(props) => slideDirection(props.direction)};\n  }\n\n  &.slider-content-exit-active {\n    animation: ${(props) => slideIn(props.direction)} 500ms reverse;\n    animation-fill-mode: forwards;\n  }\n\n  &.slider-content-exit-done {\n    transform: ${(props) => slideDirection(props.direction)};\n  }\n`;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Container, Slider } from \"./styled\";\n\nexport const SliderContainer = ({ display, direction, children, enterDelay, ...props }) => {\n  return (\n    <Container>\n      <CSSTransition\n        in={display}\n        timeout={1000}\n        className=\"slider-content\"\n        classNames=\"slider-content\"\n        {...props}\n      >\n        <Slider direction={direction} enterDelay={enterDelay}>{children}</Slider>\n      </CSSTransition>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport { Banner } from \"../components/Banner\";\nimport { PopOverContainer } from \"../components/PopOverContainer\";\nimport { SliderContainer } from \"../components/SliderContainer\";\nimport useScore from \"../hooks/useScore\";\nimport styled from \"styled-components\";\n\nconst BannerGroup = ({ display, classDisplay, people }) => {\n  const PersonBanner = styled(Banner)`\n    padding-right: 0;\n  `;\n\n  return (\n    <div class=\"banner-group\">\n      <PopOverContainer display={display}>\n        <Banner variant=\"accent\">{classDisplay}</Banner>\n      </PopOverContainer>\n      <SliderContainer\n        display={display}\n        direction=\"left\"\n        timeout={1000}\n        enterDelay={500}\n      >\n        {people &&\n          people.map((person) => (\n            <PersonBanner>\n              <>\n                <b>{person.name}: </b>\n                {person.time}\n              </>\n            </PersonBanner>\n          ))}\n      </SliderContainer>\n    </div>\n  );\n};\n\nconst SessionBanner = ({ display, session }) => {\n  const [current, setCurrent] = useState();\n  const [changing, setChanging] = useState(false);\n  const timeout = 500;\n\n  useEffect(() => {\n    setChanging(true);\n    setTimeout(() => {\n      setChanging(false);\n    }, timeout);\n  }, [session, setChanging]);\n\n  return (\n    <SliderContainer\n      display={display && !changing}\n      direction=\"right\"\n      timeout={timeout}\n      enterDelay={0}\n      onEntering={() => {\n        setCurrent(session);\n      }}\n      onExited={() => {\n        console.log(\"exited\");\n        setCurrent(session);\n        setChanging(false);\n      }}\n    >\n      <Banner variant=\"secondary\">\n        <b>{current}</b>\n      </Banner>\n    </SliderContainer>\n  );\n};\n\nconst BottomBar = ({ display, score: { session, classDisplay, people } }) => {\n  return (\n    <div id=\"bottom-bar\">\n      <div className=\"logo-area\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </div>\n      <BannerGroup\n        display={display}\n        classDisplay={classDisplay}\n        people={people}\n      />\n      <SessionBanner display={display} session={session} />\n    </div>\n  );\n};\n\nexport const ScoreBoard = () => {\n  const [score] = useScore();\n\n  return (\n    <div className=\"App\">\n      <BottomBar display={score.display} score={score} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Admin } from \"./pages/Admin\";\nimport { ScoreBoard } from \"./pages/ScoreBoard\";\n\n// PALETTE https://paletton.com/#uid=31x0u0knGvnd+KHjkBbtStOuHmw\nfunction App() {\n  // useEffect(() => {\n  //   const socket = new WebSocket(\"ws://localhost:3030/echo\");\n\n  //   socket.addEventListener(\"open\", () => {\n  //     console.log(\"open\");\n  //     socket.send(\"message\");\n  //   });\n\n  //   // Listen for messages\n  //   socket.addEventListener(\"message\", function (event) {\n  //     console.log(event);\n  //     console.log(\"Message from server \", event.data);\n  //   });\n  // });\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route path=\"/\">\n          <ScoreBoard />;\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}